# Dev by ErR
import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ChatPermissions
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters import Command
import sqlite3
import time
import os
import asyncio

API_TOKEN = os.getenv("BOT_TOKEN") or "6921670195:AAGCnDfsLweOIj6AbZLaG6alveYbs9NPCu4"
LOG_CHANNEL_ID = int(os.getenv("LOG_CHANNEL_ID") or 0)  # ID –ª–æ–≥-–∫–∞–Ω–∞–ª–∞

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

conn = sqlite3.connect('karma.db')
c = conn.cursor()
c.execute('''CREATE TABLE IF NOT EXISTS karma (user_id INTEGER PRIMARY KEY, username TEXT, karma INTEGER)''')
c.execute('''CREATE TABLE IF NOT EXISTS reports (id INTEGER PRIMARY KEY AUTOINCREMENT, reporter_id INTEGER, target_id INTEGER, reason TEXT, timestamp INTEGER)''')
conn.commit()

def change_karma(user_id, username, delta):
    c.execute('SELECT karma FROM karma WHERE user_id = ?', (user_id,))
    row = c.fetchone()
    if row:
        c.execute('UPDATE karma SET karma = karma + ? WHERE user_id = ?', (delta, user_id))
    else:
        c.execute('INSERT INTO karma (user_id, username, karma) VALUES (?, ?, ?)', (user_id, username, delta))
    conn.commit()

def get_karma(user_id):
    c.execute('SELECT karma FROM karma WHERE user_id = ?', (user_id,))
    row = c.fetchone()
    return row[0] if row else 0

def log_action(text):
    if LOG_CHANNEL_ID:
        try:
            return bot.send_message(LOG_CHANNEL_ID, text)
        except Exception as e:
            logging.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

@dp.message_handler(commands=['plus', 'minus'])
async def karma_vote(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ä–º—É.")
        return

    target = message.reply_to_message.from_user
    if message.from_user.id == target.id:
        await message.reply("–ù–µ–ª—å–∑—è –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ —Å–∞–º–æ–≥–æ —Å–µ–±—è.")
        return

    delta = 1 if message.text.startswith('/plus') else -1
    change_karma(target.id, target.username or target.full_name, delta)
    await message.reply(f"–ö–∞—Ä–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target.full_name} —Ç–µ–ø–µ—Ä—å {get_karma(target.id)}")
    await log_action(f"{message.from_user.full_name} –∏–∑–º–µ–Ω–∏–ª –∫–∞—Ä–º—É {target.full_name} –Ω–∞ {delta}")

@dp.message_handler(commands=['karma'])
async def karma_check(message: types.Message):
    user = message.reply_to_message.from_user if message.reply_to_message else message.from_user
    await message.reply(f"–ö–∞—Ä–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.full_name}: {get_karma(user.id)}")

@dp.message_handler(commands=['mute'])
async def mute_user(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –∑–∞–º—É—Ç–∏—Ç—å –µ–≥–æ.")
        return
    user_id = message.reply_to_message.from_user.id
    until_date = int(time.time()) + 60 * 5  # 5 –º–∏–Ω—É—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    await bot.restrict_chat_member(
        message.chat.id,
        user_id,
        permissions=ChatPermissions(can_send_messages=False),
        until_date=until_date
    )
    await message.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—É—á–µ–Ω –Ω–∞ 5 –º–∏–Ω—É—Ç.")
    await log_action(f"{message.from_user.full_name} –∑–∞–º—É—Ç–∏–ª {message.reply_to_message.from_user.full_name} –Ω–∞ 5 –º–∏–Ω—É—Ç")

@dp.message_handler(commands=['ban'])
async def ban_user(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –∑–∞–±–∞–Ω–∏—Ç—å –µ–≥–æ.")
        return
    user_id = message.reply_to_message.from_user.id
    await bot.kick_chat_member(message.chat.id, user_id)
    await message.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω.")
    await log_action(f"{message.from_user.full_name} –∑–∞–±–∞–Ω–∏–ª {message.reply_to_message.from_user.full_name}")

@dp.message_handler(commands=['unban'])
async def unban_user(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Ä–∞–∑–±–∞–Ω–∏—Ç—å –µ–≥–æ.")
        return
    user_id = message.reply_to_message.from_user.id
    await bot.unban_chat_member(message.chat.id, user_id)
    await message.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω.")
    await log_action(f"{message.from_user.full_name} —Ä–∞–∑–±–∞–Ω–∏–ª {message.reply_to_message.from_user.full_name}")

@dp.message_handler(commands=['report'])
async def report_user(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–µ–≥–æ.")
        return

    parts = message.text.split(maxsplit=1)
    reason = parts[1] if len(parts) > 1 else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"

    reporter = message.from_user
    target = message.reply_to_message.from_user

    c.execute('INSERT INTO reports (reporter_id, target_id, reason, timestamp) VALUES (?, ?, ?, ?)',
              (reporter.id, target.id, reason, int(time.time())))
    conn.commit()

    await message.reply(f"–ñ–∞–ª–æ–±–∞ –Ω–∞ {target.full_name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.")
    await log_action(f"–ñ–∞–ª–æ–±–∞ –æ—Ç {reporter.full_name} –Ω–∞ {target.full_name}. –ü—Ä–∏—á–∏–Ω–∞: {reason}")

@dp.chat_member_handler()
async def welcome_new_user(event: types.ChatMemberUpdated):
    if event.new_chat_member.status == "member":
        user = event.from_user
        chat = event.chat
        welcome_message = await bot.send_message(
            chat.id,
            f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.full_name}, –≤ –≥—Ä—É–ø–ø—É –¢–°–ñ \"–ë–æ—Ç–∞–Ω–∏—á–µ—Å–∫–∏–π —Å–∞–¥\"!\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π—Ç–µ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –∏–∑–±–µ–≥–∞–π—Ç–µ —Å–ø–∞–º–∞."
        )
        await log_action(f"{user.full_name} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –≥—Ä—É–ø–ø–µ.")
        await asyncio.sleep(180)  # 3 –º–∏–Ω—É—Ç—ã
        try:
            await bot.delete_message(chat.id, welcome_message.message_id)
        except Exception as e:
            logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
